# syntax=docker/dockerfile:1.4

FROM ruby:3.3.0-slim-bookworm

RUN --mount=type=cache,id=dev-apt-cache,sharing=locked,target=/tmp/cache/apt-cache \
    --mount=type=cache,id=dev-apt-lib,sharing=locked,target=/tmp/cache/apt-lib \
    apt-get update -qq \
    && DEBIAN_FRONTEND=noninteractive apt-get install -yq build-essential git-core wget ripgrep zsh gnupg2 curl ca-certificates apt-transport-https \
    && rm -rf /var/lib/apt/lists/*

RUN curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/$(uname -m | sed -e 's/x86_64/amd64/' -e 's/aarch64/arm64/')/kubectl" && chmod +x ./kubectl && mv ./kubectl /usr/local/bin/kubectl

RUN sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" \
  && git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions

RUN set -x; cd "$(mktemp -d)" \
  && OS="$(uname | tr '[:upper:]' '[:lower:]')" \
  && ARCH="$(uname -m | sed -e 's/x86_64/amd64/' -e 's/\(arm\)\(64\)\?.*/\1\2/' -e 's/aarch64$/arm64/')" \
  && KREW="krew-${OS}_${ARCH}" \
  && curl -fsSLO "https://github.com/kubernetes-sigs/krew/releases/latest/download/${KREW}.tar.gz" \
  && tar zxvf "${KREW}.tar.gz" \
  && ./"${KREW}" install krew \
  && PATH="$HOME/.krew/bin:$PATH" kubectl krew install ctx \
  && PATH="$HOME/.krew/bin:$PATH" kubectl krew install ns

RUN curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

ENV GEM_HOME="/bundle" \
    GEM_PATH="/bundle" \
    APP_PATH="/home/app/hetzner-k3s" \
    BUNDLE_PATH="/bundle" \
    BUNDLE_APP_CONFIG="/bundle" \
    BUNDLE_SILENCE_ROOT_WARNING=1 \
    LANG=C.UTF-8 LC_ALL=C.UTF-8 \
    GOPATH=/root/go

RUN mkdir -p $GOPATH/bin

RUN wget https://go.dev/dl/go1.21.0.linux-$(uname -m | sed -e 's/x86_64/amd64/' -e 's/aarch64/arm64/').tar.gz \
  && tar -xvf go1.21.0.linux-$(uname -m | sed -e 's/x86_64/amd64/' -e 's/aarch64/arm64/').tar.gz \
  && rm -rf /usr/local/go \
  && mv go /usr/local \
  && rm -rf go1.21.0.linux-$(uname -m | sed -e 's/x86_64/amd64/' -e 's/aarch64/arm64/').tar.gz \
  && /usr/local/go/bin/go install github.com/stern/stern@latest

SHELL ["/bin/zsh", "-c"]

RUN echo '/bin/zsh' | chsh `whoami`

RUN rm /root/.zshrc && ln -s /home/app/hetzner-k3s/.zshrc /root/.zshrc

ENV DEVCONTAINER=true

CMD ["tail", "-f", "/dev/null"]
